/*
struct 구조체 이름 {
	자료형 멤버 이름;
};
*/

#define _CRT_SECURE_NO_WARNINGS // strcpy 보안 경고로 인한 컴파일 에러 방지
#include <stdio.h>
#include <string.h>				// strcpy 함수가 선언된 헤더 파일

struct Person {				// 구조체 정의
	char name[20];			// 구조체 멤버 1
	int age;				// 구조체 멤버 2
	char address[100];		// 구조체 멤버 3
};

int main() {
	struct Person p1;		// 구조체 변수 선언

	// .(점)으로 구조체 멤버에 접근하여 값 할당
	strcpy(p1.name, "홍길동");
	p1.age = 30;
	strcpy(p1.address, "서울시 용산구 한남동");

	// .(점)으로 구조체 멤버에 접근하여 값 출력
	printf("이름 : %s\n", p1.name);
	printf("나이 : %d\n", p1.age);
	printf("주소 : %s\n", p1.address);

	return 0;
}

// 구조체 변수 선언과 동시 초기화하는 방법

#include <stdio.h>

struct Person {
	char name[20];
	int age;
	char address[100];
};

int main() {
  // 구조체 변수 선언과 동시에 초기화하는 방법
	// name에는 "홍길동", age에는 30, address에는 "서울시 용산구 한남동"
	struct Person p1 = { .name = "홍길동", .age = 30, .address = "서울시 용산구 한남동" };

	printf("이름 : %s\n", p1.name);
	printf("나이 : %d\n", p1.age);
	printf("주소 : %s\n", p1.address);

	// name에는 "고길동", age에는 40, address에는 "서울시 서초구 반포동"

	struct Person p2 = { "고길동", 40, "서울시 서초구 반포동" };
	printf("이름 : %s\n", p2.name);
	printf("나이 : %d\n", p2.age);
	printf("주소 : %s\n", p2.address);

	return 0;
}
